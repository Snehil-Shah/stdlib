/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/* eslint-disable no-underscore-dangle */

'use strict';

// MODULES //

var format = require( '@stdlib/string/format' );
var log = require( './../log.js' );


// MAIN //

/**
* Returns a callback to be invoked upon calling the `theme` command.
*
* @private
* @param {REPL} repl - REPL instance
* @returns {Function} callback
*/
function command( repl ) {
	return onCommand;

	/**
	* Gets (and sets) the color theme(s) for syntax-highlighting.
	*
	* @private
	* @param {string} [name] - theme name
	* @returns {void}
	*/
	function onCommand() {
		var themes;
		var theme;
		var nargs;
		var name;
		var i;

		nargs = arguments.length;

		// If no theme name given, display current and available themes:
		if ( nargs === 0 ) {
			themes = repl.getThemes();
			theme = repl.getTheme();
			if ( themes.length === 0 ) {
				repl._ostream.write( 'No themes available.' );
				return;
			}
			repl._ostream.write( format( 'Current theme: `%s`.\n', theme ) );
			repl._ostream.write( format( 'Available themes: `%s`', themes[ 0 ] ) );
			for ( i = 1; i < themes.length; i++ ) {
				repl._ostream.write( format( ' ,`%s`', themes[ i ] ) );
			}
			repl._ostream.write( '.\n' );
			return;
		}
		// Set theme:
		name = arguments[ 0 ];
		try {
			repl.setTheme( name );
		} catch ( err ) {
			repl._ostream.write( format( 'Error: %s\n', err.message ) );
			return;
		}
		log( repl, format( '\nSuccessfully updated theme to `%s`.', name ) );
	}
}


// EXPORTS //

module.exports = command;
