/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/* eslint-disable no-restricted-syntax, max-len */

'use strict';

var discreteUniform = require( '@stdlib/random/base/discrete-uniform' ).factory;
var filled2dBy = require( '@stdlib/array/base/filled2d-by' );
var map2d = require( '@stdlib/array/base/map2d' );
var UnicodeTable = require( './../lib' );

function styleRed( value ) {
	return '\u001b[31m' + value + '\u001b[0m';
}

function styleGreen( value ) {
	return '\u001b[32m' + value + '\u001b[0m';
}

function Value( value ) {
	this._value = value;
	return this;
}

Value.prototype.toString = function toString() {
	if ( this._value > 0 ) {
		return styleGreen( this._value.toString() );
	}
	if ( this._value < 0 ) {
		return styleRed( this._value.toString() );
	}
	return this._value.toString();
};

function toValue( value ) {
	return new Value( value );
}

// Define a data set:
var shape = [ 5, 4 ];
var data = map2d( filled2dBy( shape, discreteUniform( -3, 3 ) ), shape, toValue );

// Define column headers:
var headers = [ 'A', 'B', 'C', 'D' ];

// Create a table:
var table = new UnicodeTable( data, {
	'headers': headers,
	'rowSeparator': '-',
	'marginLeft': 5,
	'marginRight': 5,
	'align': 'right',
	'maxColumnWidth': 10
});

// Render the table:
var str = table.render();
console.log( str );
// => '...'
