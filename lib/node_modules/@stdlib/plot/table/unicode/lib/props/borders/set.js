/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isString = require( '@stdlib/assert/is-string' );
var format = require( '@stdlib/string/format' );


// VARIABLES //

var BORDER_STRING_LEN = 7;
var BORDER_CHARACTERS = 4;


// MAIN //

/**
* Sets the table's border characters.
*
* @private
* @param {string} borders - borders string
* @throws {TypeError} must be a four space separated characters or 'None'
*/
function set( borders ) {
	var arr;

	/* eslint-disable no-invalid-this */
	if ( !isString( borders ) ) {
		throw new TypeError( format( 'invalid assignment. `%s` must be a string. Value: `%s`.', 'borders', borders ) );
	}
	if ( borders === 'None' ) {
		this._borders = borders;
		return;
	}
	arr = borders.split( ' ' );
	if ( borders.length !== BORDER_STRING_LEN ) {
		throw new TypeError( format( 'invalid assignment. `%s` must be four space separated characters or \'None\'. Value: `%s`.', 'borders', borders ) );
	}
	if ( arr.length !== BORDER_CHARACTERS ) {
		throw new TypeError( format( 'invalid assignment. `%s` must be four space separated characters or \'None\'. Value: `%s`.', 'borders', borders ) );
	}
	this._borders = arr;
}


// EXPORTS //

module.exports = set;
