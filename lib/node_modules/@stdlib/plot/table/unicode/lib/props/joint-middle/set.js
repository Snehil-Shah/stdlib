/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/* eslint-disable no-invalid-this */

'use strict';

// MODULES //

var isString = require( '@stdlib/assert/is-string' ).isPrimitive;
var splitGraphemeClusters = require( '@stdlib/string/split-grapheme-clusters' );
var format = require( '@stdlib/string/format' );
var wcswidth = require( './../../wcswidth.js' ); // TODO: replace with string/base/wcswidth


// MAIN //

/**
* Sets the joint character connecting cells within the middle of the table.
*
* @private
* @param {string} value - character
* @throws {TypeError} must be a string containing a single character
*/
function set( value ) {
	var w;
	if ( !isString( value ) ) {
		throw new TypeError( format( 'invalid assignment. `%s` must be a string which contains one and only one character. Value: `%s`.', 'jointMiddle', value ) );
	}
	w = wcswidth( value );
	if ( w !== 1 ) {
		throw new TypeError( format( 'invalid assignment. `%s` must be a string which contains one and only one character. Value: `%s`.', 'jointMiddle', value ) );
	}
	if ( value !== this._joints[ 0 ].value ) {
		this._joints[ 0 ] = {
			'value': value,
			'graphemes': splitGraphemeClusters( value ),
			'width': w
		};
		if ( !this._quiet ) {
			this.emit( 'change' );
		}
	}
}


// EXPORTS //

module.exports = set;
