/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/* eslint-disable no-invalid-this */

'use strict';

// MODULES //

var isString = require( '@stdlib/assert/is-string' ).isPrimitive;
var isStringArray = require( '@stdlib/assert/is-string-array' ).primitives;
var isEqualArray = require( '@stdlib/assert/is-equal-array' );
var copy = require( '@stdlib/array/base/copy' );
var format = require( '@stdlib/string/format' );


// MAIN //

/**
* Sets the table cell format string(s).
*
* @private
* @param {(StringArray|string)} value - cell format string(s)
* @throws {TypeError} must provide a string or an array of strings
* @throws {RangeError} must provide the correct number of columns
*/
function set( value ) {
	if ( isString( value ) ) {
		value = [ value ];
		if ( !isEqualArray( value, this._format ) ) {
			this._format = value;
			if ( !this._quiet ) {
				this.emit( 'change' );
			}
		}
		return;
	}
	if ( !isStringArray( value ) ) {
		throw new TypeError( format( 'invalid assignment. `%s` must be a string or an array of strings. Value: `%s`.', 'format', value ) );
	}
	if ( this._numColumns ) {
		if ( value.length !== this._numColumns ) {
			throw new RangeError( format( 'invalid assignment. `%s` must have a length of %d in order to match the number of table columns. Value: `[%s]`.', 'format', this._numColumns, copy( value ).join( ', ' ) ) );
		}
	} else {
		this._numColumns = value.length;
	}
	value = copy( value );
	if ( !isEqualArray( value, this._format ) ) {
		this._format = value;
		if ( !this._quiet ) {
			this.emit( 'change' );
		}
	}
}


// EXPORTS //

module.exports = set;
