/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isString = require( '@stdlib/assert/is-string' );
var format = require( '@stdlib/string/format' );


// VARIABLES //

var CORNER_STRING_LEN = 7;
var CORNER_CHARACTERS = 4;
var EMPTY_CORNERS = [ ' ', ' ', ' ', ' ' ];


// MAIN //

/**
* Sets the table's corner characters.
*
* @private
* @param {string} corners - corners string
* @throws {TypeError} must be a string with four space separated characters or 'None'
*/
function set( corners ) {
	/* eslint-disable no-invalid-this */
	var arr;

	if ( !isString( corners ) ) {
		throw new TypeError( format( 'invalid assignment. `%s` must be a string. Value: `%s`.', 'corners', corners ) );
	}
	if ( corners === 'None' ) {
		this._corners = EMPTY_CORNERS;
		return;
	}
	arr = corners.split( ' ' );
	if ( corners.length !== CORNER_STRING_LEN ) {
		throw new TypeError( format( 'invalid assignment. `%s` must be four space separated characters or \'None\'. Value: `%s`.', 'corners', corners ) );
	}
	if ( arr.length !== CORNER_CHARACTERS ) {
		throw new TypeError( format( 'invalid assignment. `%s` must be four space separated characters or \'None\'. Value: `%s`.', 'corners', corners ) );
	}
	this._corners = arr;
}


// EXPORTS //

module.exports = set;
