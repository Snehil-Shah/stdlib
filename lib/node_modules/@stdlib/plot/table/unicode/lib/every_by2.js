/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Tests whether all element pairs from two arrays pass a test implemented by a binary predicate function.
*
* @private
* @param {Collection} x - first input array
* @param {Collection} y - second input array
* @param {Function} predicate - predicate function
* @param {*} thisArg - predicate function execution context
* @returns {boolean} boolean indicating whether all elements pass a test
*/
function everyBy2( x, y, predicate, thisArg ) { // FIXME: move to array/base
	var len;
	var i;

	len = x.length;
	if ( len !== y.length ) {
		return false;
	}
	for ( i = 0; i < len; i++ ) {
		if ( !predicate.call( thisArg, x[ i ], y[ i ], i, [ x, y ] ) ) {
			return false;
		}
	}
	return true;
}


// EXPORTS //

module.exports = everyBy2;
