/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var accessors = require( '@stdlib/array/base/accessors' );
var format = require( '@stdlib/string/format' );
var normalizeDatum = require( './normalize_datum.js' );


// MAIN //

/**
* Normalizes table data.
*
* @private
* @param {Collection} buffer - linear data buffer
* @param {NonNegativeIntegerArray} shape - table data shape
* @param {StringArray} fmts - format strings
* @returns {Collection} modified data buffer
*/
function normalize( buffer, shape, fmts ) {
	var obj;
	var get;
	var set;
	var raw;
	var tmp;
	var v;
	var i;
	var j;
	var k;

	obj = accessors( buffer );
	get = obj.accessors[ 0 ];
	set = obj.accessors[ 1 ];

	k = 0;
	for ( i = 0; i < shape[ 0 ]; i++ ) {
		for ( j = 0; j < shape[ 1 ]; j++ ) {
			raw = get( buffer, k );

			// Generate a formatted string:
			v = format( fmts[ j%fmts.length ], raw );

			// Normalize the string to a data object:
			tmp = normalizeDatum( v );

			// Cache the original datum:
			tmp.raw = raw;

			// Replace the element in the data buffer:
			set( buffer, k, tmp );
			k += 1;
		}
	}
	return buffer;
}


// EXPORTS //

module.exports = normalize;
